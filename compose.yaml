services:
  mongodb:
    image: mongo
    ports:
      - 27017:27017
    container_name: mongodb
    networks:
      - mern-stack-net
    env_file: .env
    volumes:
      - mongo-data:/data/db
      - ./mongo-init:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"] # Check health endpoint for healthy service.
      interval: 30s # Perform the health check every 30 seconds.
      timeout: 10s # Consider the health check a failure if it takes more than 10 seconds.
      retries: 5 # Retry the health check up to 5 times before considering the container unhealthy.
  citz-grs-dats-api:
    container_name: citz-grs-dats-api
    build:
      context: ./backend
      dockerfile: .docker/Dockerfile.prod
    ports:
      - "5000:5000"
    environment:
      NODE_ENV: development
    env_file: .env
    depends_on:
      - mongodb
    networks:
      - mern-stack-net
    volumes:
      - ./backend:/backend
      - /frontend/node_modules
    healthcheck:
      test: ["CMD", "curl -f http://localhost:5000/health || exit 1"] # Check health endpoint for healthy service.
      interval: 30s # Perform the health check every 30 seconds.
      timeout: 10s # Consider the health check a failure if it takes more than 10 seconds.
      retries: 5 # Retry the health check up to 5 times before considering the container unhealthy.
  frontend:
    container_name: citz-grs-dats-app
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    depends_on:
      - citz-grs-dats-api
    ports:
      - "3000:3000"
    networks:
      - mern-stack-net
    volumes:
      - ./frontend:/frontend
      - /frontend/node_modules
networks:
  mern-stack-net:
    driver: bridge

volumes:
  mongo-data:
    driver: local
